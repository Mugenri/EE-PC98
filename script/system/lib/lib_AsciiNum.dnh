//Creates shot deletion and item collection score numbers

int _asciiList; //item collect and boss spell bonus numbers
int _spellList; //spell bonus and history numbers

function<void> InitAsciiList() {
    _asciiList = InitParticleList(IMG_SYSTEM_UI, RP_STG_TEXT, 72, 336, 80, 344);
    ParticleListShader(_asciiList, 8/256, 1);
}
function<void> InitAsciiSpellList() {
    _spellList = InitParticleList(IMG_SYSTEM_UI, RP_STG_SPELLNUM, 72, 336, 80, 344);
    ParticleListShader(_spellList, 8/256, 1);
    ObjSprite2D_SetDestRect(_spellList, 0, 0, 8, 8);
}

function<void> AsciiScoreNum(real x_, real y_, int score_, int color_) {
    int[] listNum = DigitToArray(score_);
    x_ -= 4 * length(listNum);

    async {
        loop (24) {
            WriteNum();
            yield;
        }
        loop (16) {
            y_ -= 1/2;
            WriteNum();
            yield;
        }
        
        function<void> WriteNum() {
            for (int i = 0; i < length(listNum); i++) {
                ObjParticleList_SetPosition(_asciiList, x_ + 8 * i, y_, 1);
                ObjParticleList_SetExtraData(_asciiList, listNum[i], 0, 0);
                ObjParticleList_SetColor(_asciiList, color_);
                ObjParticleList_AddInstance(_asciiList);
            }
        }
    }
}

function<void> AsciiScoreNum(real x_, real y_, int score_) { //if no color is provided, default to white
    AsciiScoreNum(x_, y_, score_, COLOR_WHITE);
}

function<void> AsciiSpellNum(real x_, real y_, int num_) {
    int[] listNum = DigitToArray(num_);
    for (int i = 0; i < length(listNum); i++) {
        ObjParticleList_SetPosition(_spellList, x_ + 8 * i, y_, 1);
        ObjParticleList_SetExtraData(_spellList, listNum[i], 0, 0);
        ObjParticleList_SetColor(_spellList, COLOR_WHITE);
        ObjParticleList_AddInstance(_spellList);
    }
}