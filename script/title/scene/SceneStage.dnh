//Stage Control Script
#include "./../lib/lib_CommonTitle.dnh"
#include "./../lib/lib_Util.dnh"

bool _pauseEnable = false;
bool _dialogueRunning = false;
string _dialoguePath = "";

@Initialize {
    SetAreaCommonData(AREA_TITLE, "SCRIPT_STAGE", GetOwnScriptID());
    SetAutoDeleteObject(true);
    TStageScene(MODE_NONE);
    ClearBGM();
}

@Event {
    alternative (GetEventType())
    case (EV_DIALOGUE_START) {
        _dialogueRunning = true;
        _dialoguePath =  GetEventArgument(0);
    }
    case (EV_PAUSE_ENABLE) {
        _pauseEnable = GetEventArgument(0);
    }
}

@MainLoop {yield;}

task TStageScene(int stageMode_) { //TODO serious refactoring
    int playerType      = GetAreaCommonData(AREA_TITLE, "PlayerType", 0);
    int _GetPlayMode    = GetAreaCommonData(AREA_TITLE, "PlayMode", GAME_NONE);
    int _GetRank        = GetAreaCommonData(AREA_TITLE, "Difficulty", D_EASY);
    string _ReplayPath  = GetAreaCommonData(AREA_TITLE, "ReplayPath", "");
    string pathPlayer   = SCRIPT_PLAYERS[playerType];

    InitializeStageScene();

    if (length(_ReplayPath) > 0) SetStageReplayFile(_ReplayPath);

    string stageScript = playerType == PLAYER_YABUSAME ? STAGE_YABUSAME : STAGE_YABUSAME; //TODO Change to tsubakura stage

    ScreenBlackout(0, 35, 0, COLOR_BLACK); //grants 5 frames of black screen to hide any loading artifacts
    wait(30);
    StartStage();

    loop {
        //--------------------------------------------------------------------
        //Pause Menu
        //--------------------------------------------------------------------
        if (GetVirtualKeyState(VK_PAUSE) == KEY_PUSH && _pauseEnable) {
            int pauseResult = PauseMenu();
            alternative (pauseResult)
            case (RESULT_RETRY) {
                //Retry Stage
                TerminateStageScene();
                TStageScene(MODE_RETRY);
                return;
            }
            case (RESULT_END) {
                //Stop stage script
                TerminateStageScene();
            }
        }
        //--------------------------------------------------------------------
        //Dialogue Scene
        //--------------------------------------------------------------------
        if (_dialogueRunning) RunDialogue(_dialoguePath);
        //--------------------------------------------------------------------
        //Stage Result Upon Ending
        //--------------------------------------------------------------------
        int stageState = GetStageSceneState();
        if (stageState == STAGE_STATE_FINISHED) {
            int stageResult = GetStageSceneResult();

            alternative (stageResult)
            case (STAGE_RESULT_CLEARED) { //Game Won

            }
            case (STAGE_RESULT_PLAYER_DOWN) { //Game Over

            }
            case (STAGE_RESULT_BREAK_OFF) { //Exit Game
                TDefault();
                break;
            }
        }
        yield;
    }

    if (!IsReplay()) TReturnToTitle();
    else {
        TDefault();
        TReturnToTitle();
    }

    function<void> StartStage() {
        SetStageMainScript(stageScript);
        SetStagePlayerScript(pathPlayer);
        StartStageScene();
    }
}

function<int> PauseMenu() {
	StopBGM(); //pause music
    SetTransitionTexture(); //save current frame as pause bg
    PauseStageScene(true); //pause stage
	
	string pathScript = GetCurrentScriptDirectory() ~ "../../system/Pause.dnh";
	
	//Run pause script
	int idScript = LoadScript(pathScript);
	StartScript(idScript);
	
	while (!IsCloseScript(idScript)) {
		yield;
	}
	
    //resume stage
	PauseStageScene(false);
	int res = GetScriptResult(idScript);
	return res;
}

function<void> RunDialogue(string path_) {
    SetTransitionTexture();
    PauseStageScene(true);

    //Start dialogue
    int idScript = LoadScript(path_);
    StartScript(idScript);

    while (!IsCloseScript(idScript)) yield;

    //resume
    _dialogueRunning = false;
    PauseStageScene(false);
    UnloadScriptFromCache(path_);
    return;
}

function<void> SetTransitionTexture() { //saves the current frame to be used as the background for pause/dialogue screens
	string textureName = GetTransitionRenderTargetName();
	RenderToTextureA1(textureName, RP_UI_MIN, RP_UI_MAX, true);
}

task TDefault() { //Reset Common Data
	SetAreaCommonData(AREA_TITLE, "ReplayPath", "");
	SetAreaCommonData(AREA_TITLE, "PlayerType", 0);
	SetAreaCommonData(AREA_TITLE, "PlayMode", GAME_NONE);
	SetAreaCommonData(AREA_TITLE, "Difficulty", D_EASY);
	//SetAreaCommonData(AREA_TITLE, "StageIndex", 0);
	//SetAreaCommonData(AREA_TITLE, "ExtraMode", 0);
}

task TReturnToTitle() { //Run title screen
    string path = GetCurrentScriptDirectory() ~ "../Title.dnh";
    int ID = LoadScript(path);
    StartScript(ID);
}