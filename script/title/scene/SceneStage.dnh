//Stage Control Script
#include "./../lib/lib_TitleCommon.dnh"
#include "./../lib/lib_TitleUtil.dnh"
#include "./../lib/lib_StagePath.dnh"
#include "./../../lib/lib_HighScore.dnh"

bool _pauseEnable;
bool _dialogueRunning;
bool _gameOver;
string _dialoguePath;

@Initialize {
    SetAreaCommonData(AREA_TITLE, "SCRIPT_STAGE", GetOwnScriptID());
    SetAutoDeleteObject(true);
    TStageScene();
    ClearBGM();
}

@Event {
    alternative (GetEventType())
    case (EV_DIALOGUE_START) {
        _dialogueRunning = true;
        _dialoguePath =  GetEventArgument(0);
    }
    case (EV_PAUSE_ENABLE) {
        _pauseEnable = GetEventArgument(0);
    }
    case (EV_CONTINUE) { //bring up the gameover menu, if continue is used then notify stage level script
        _gameOver = true;
    }
}

@MainLoop {yield;}

task TStageScene() { //TODO serious refactoring
    int gameMode        = GetGameMode();
    int playerType      = GetPlayerType();
    int stageIndex      = GetStageIndex();
    int rank            = GetDifficulty();
    string replayPath   = GetAreaCommonData(AREA_TITLE, "ReplayPath", "");
    string pathPlayer   = SCRIPT_PLAYERS[playerType];

    _pauseEnable = false;
    _dialogueRunning = false;
    _gameOver = false;
    _dialoguePath = "";

    InitializeStageScene();

    if (length(replayPath) > 0) SetStageReplayFile(replayPath);

    string stageScript = GetStagePath(stageIndex);

    ScreenBlackout(0, 35, 0, COLOR_BLACK); //grants 5 frames of black screen to hide any loading artifacts
    wait(30);
    StartStage();

    loop {
        //--------------------------------------------------------------------
        //Pause Menu
        //--------------------------------------------------------------------
        if (GetVirtualKeyState(VK_PAUSE) == KEY_PUSH && _pauseEnable) {
            int pauseResult = PauseMenu();
            alternative (pauseResult)
            case (RESULT_RETRY) {
                //Retry Stage
                TerminateStageScene();
                TStageScene();
                return;
            }
            case (RESULT_END) {
                //Stop stage script
                TerminateStageScene();
            }
        }
        //--------------------------------------------------------------------
        //Dialogue Scene
        //--------------------------------------------------------------------
        if (_dialogueRunning) RunDialogue(_dialoguePath);
        //--------------------------------------------------------------------
        //Gameover/Continue Menu
        //--------------------------------------------------------------------
        if (_gameOver) {
            _gameOver = false;
            int gameOverResult = GameOver();
            if (GetAreaCommonData(AREA_STAGE, "Continues", 0) == 0) { //set high score before erasing through continue use
                HS_SetHighScore(GetScore());
            }
            alternative (gameOverResult)
            case (RESULT_CONTINUE) {
                NotifyEvent(GetAreaCommonData(AREA_STAGE, "SCRIPT_STAGE", 0), EV_CONTINUE, 0);
                PauseStageScene(false);
            }
            case (RESULT_END) {
                wait(210);
                TerminateStageScene();
            }
        }
        //--------------------------------------------------------------------
        //Stage Result Upon Ending
        //--------------------------------------------------------------------
        int stageState = GetStageSceneState();
        if (stageState == STAGE_STATE_FINISHED) {
            int stageResult = GetStageSceneResult();

            alternative (stageResult)
            case (STAGE_RESULT_CLEARED) { //Game Won
                WriteLog("won");
                //TODO screen cap and fade out for 300 frames. might have to put elsewhere?
                break;
            }
            case (STAGE_RESULT_PLAYER_DOWN) { //Game Over (likely does not trigger ever)
                WriteLog("game over");
                break;
            }
            case (STAGE_RESULT_BREAK_OFF) { //Exit Game
                WriteLog("break off"); //need some way to differentiate between quit from pause and quit from continue
                break;
            }
        }
        yield;
    }

    TReturnToTitle();

    function<void> StartStage() {
        SetStageMainScript(stageScript);
        SetStagePlayerScript(pathPlayer);
        StartStageScene();
    }
}

function<int> PauseMenu() {
	StopBGM(); //pause music
    SetTransitionTexture(); //save current frame as pause bg
    PauseStageScene(true); //pause stage
	
	string pathScript = GetCurrentScriptDirectory() ~ "../../system/Pause.dnh";
	
	//Run pause script
	int idScript = LoadScript(pathScript);
	StartScript(idScript);
	
	while (!IsCloseScript(idScript)) {
		yield;
	}
	
    //resume stage
	PauseStageScene(false);
	int res = GetScriptResult(idScript);
	return res;
}

function<void> RunDialogue(string path_) {
    SetTransitionTexture();
    PauseStageScene(true);

    //Start dialogue
    int idScript = LoadScript(path_);
    StartScript(idScript);

    while (!IsCloseScript(idScript)) yield;

    //resume
    _dialogueRunning = false;
    PauseStageScene(false);
    UnloadScriptFromCache(path_);
    return;
}

function<int> GameOver() {
    SetTransitionTexture();
    PauseStageScene(true);

    string pathScript = GetCurrentScriptDirectory() ~ "../../system/GameOver.dnh";

    //Gameover script
    int idScript = LoadScript(pathScript);
    StartScript(idScript);

    while (!IsCloseScript(idScript)) yield;

    return GetScriptResult(idScript);
}

function<void> SetTransitionTexture() { //saves the current frame to be used as the background for pause/dialogue screens
	RenderToTextureA1(RT_SCREENSHOT, RP_UI_MIN, RP_STG_BG, false);
    RenderToTextureA1(RT_SCREENSHOT, RP_STG_TRANSITION2, RP_UI_MAX, false);
}

function<void> SetDefault() { //Reset Game Common Data
	SetAreaCommonData(AREA_TITLE, "ReplayPath", "");
	SetAreaCommonData(AREA_TITLE, "GameMode", GAME_NONE);
	SetAreaCommonData(AREA_TITLE, "PlayerType", 0);
	SetAreaCommonData(AREA_TITLE, "Difficulty", D_EASY);
	SetAreaCommonData(AREA_TITLE, "StageIndex", 0);
}

function<void> TReturnToTitle() { //Run title screen
    //TODO check if a replay just played
    if (GetAreaCommonData(AREA_STAGE, "Continues", 0) == 0) {
        HS_SetHighScore(GetScore());
    }
    //save data
    CD_SaveScore();
    CD_SaveResult();

    //clear common data areas
    ClearAreaCommonData(AREA_STAGE);
    ClearAreaCommonData(AREA_SYSTEM);
    SetDefault();

    //run title screen
    string path = GetCurrentScriptDirectory() ~ "../Title.dnh";
    int ID = LoadScript(path);
    StartScript(ID);
}