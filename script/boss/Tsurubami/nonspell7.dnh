#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nonspell 7"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _diff = GetDifficulty() - D_EASYEX;
int _count = -60;
int _loopTime = [140, 130, 110][_diff];
_spellID = 39 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(3000);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(40 + absolute(_count / 60));
    }
}

@Initialize {
    Boss_Init(true);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    TInitialize();
    TFinalize();
    TMain();
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 30, LERP_DECELERATE);
    wait(60);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (Boss_Alive(_objBoss)) yield;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
}

task TMain() {
    while (_count < -30) yield;
    while (Boss_Alive(_objBoss)) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                TFire(1);
                wait(_loopTime / 2);
                TFire(-1);
            }
        }
        yield;
    }
}

task TFire(dir_) {
    if (!Boss_Alive(_objBoss)) return;
    Primitive_ContractPolygon2D(Boss_X(_objBoss), Boss_Y(_objBoss), 0, 100, 0, 30, 32, COLOR_GRAY_L, false, RP_STG_EFF_MID);
    wait(3);
    Particle_ContractRing(Boss_X(_objBoss), Boss_Y(_objBoss), 0, 100, 90 * dir_, 30, 8, COLOR_GRAY_L);
    wait(3);
    Particle_ContractRing(Boss_X(_objBoss), Boss_Y(_objBoss), 0, 100, 90 * dir_, 30, 8, COLOR_WHITE);
    wait(30);
    int way = [20, 20, 38][_diff];
    int stack = [5, 6, 7][_diff];
    int waitTime = [4, 7, 3][_diff];
    int initSpeed = [6.5, 6.5, 4.6][_diff];
    float offset = rand(0, 360);

    loop (stack) {
        if (!Boss_Alive(_objBoss)) return;
        loop (way) {
            int shot = CreateShotUC2(Boss_X(_objBoss), Boss_Y(_objBoss), initSpeed, initSpeed, -0.3, -0.3, 0.0001, 0.0001, offset, 0, SHOT_GRAY+CARD, 0, SHOT_GRAY+SPAWN_S+SIZE_16, SHOT_GRAY+CANCEL_FADE);
            for (int i = 1; i < 10; i++) {
                int offsetAdd = [40, -40][i % 2];
                int color = [SHOT_GRAY, SHOT_BLACK][i % 2];
                int baseTime = _loopTime / 2;
                ObjMove_AddPatternC3(shot, baseTime * i, 2.2, 2.2, -0.06, -0.06, 0.0001, 0.0001, offset + offsetAdd * dir_, 0, color+CARD);
            }
            offset += 360 / way * dir_;
        }
        offset += dir_;
        CallSFX(SND_SHOT1);
        wait(waitTime);
    }
}