//Dialogue test script
//Cant include lib_Common because dialogue is being called from the package
#include "./../../lib/lib_Dialogue.dnh" //dialogue functions

@Initialize {
    SetAutoDeleteObject(true);
    TBackground();
    TMain();
}

@Event {}

@MainLoop {yield;}

@Finalize {}

task TBackground() {
    int obj = InitSprite2D(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT, RT_SCREENSHOT, RP_UI_MIN);
}

//dialogue function
task TMain() {
    Dialogue_Start(); //pause game, create text boxes
    Dialogue(); //main dialogue function
    Dialogue_End(); //remove text boxes
    CloseScript(GetOwnScriptID());
}

function<void> Dialogue() {
    //create player/enemy portraits and text fields
    int playerCutin = Dialogue_CreatePortrait(BOSS_ID_YABUSAME, false);
    int bossCutin = Dialogue_CreatePortrait(BOSS_ID_TSURUBAMI, true);

    //dialogue line position
    int line = 0;
    loop {
        bool end = DialogueLine(line);
        if (end) break;
        line++;
        Dialogue_Wait();
    }
    //Dialogue end
    Obj_Delete(playerCutin);
    Obj_Delete(bossCutin);

    function<bool> DialogueLine(int line_) {
        //-----------------------------
        alternative (line_)
        case (0) {
            Dialogue_SetPortrait(playerCutin, 1);
            Dialogue_SetText(false, "Isn't it cool how the text/can scroll now?");
        }
        case (1) {
            Dialogue_SummonBoss(20, 10, 20, BOSS_ID_TSURUBAMI, GetStgFrameWidth()/2, 60);
            Dialogue_SetPortrait(playerCutin, 3);
            Dialogue_SetText(false, "Nobody asked you, nerd./This text is going on for/a very long time innit.");
        }
        case (2) {
            Dialogue_SetPortrait(bossCutin, 0);
            Dialogue_BossTitle("Inexplicable Hakama/T s u r u b a m i  S e n r i");
        }
        case (3) {
            Dialogue_SetPortrait(bossCutin, 6);
            Dialogue_SetText(true, "I just wanted to be involved/:(");
        }
        others{
            return true;
        }
        return false;
    }
}