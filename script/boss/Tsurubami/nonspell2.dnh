#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nonspell 2"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _diff = GetDifficulty() - D_EASYEX;
int _count = -60;
int _loopTime = [240, 240, 120][_diff];
_spellID = 6 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(3000);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(40 + absolute(_count / 60));
    }
}

@Initialize {
    Boss_Init(true);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    TInitialize();
    TFinalize();
    TMain();
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 30, LERP_DECELERATE);
    wait(60);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (_bossAlive) yield;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, MID_Y, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
}

task TMain() {
    while (_count < -30) yield;
    int waitTime = [120, 120, 60][_diff];
    while (_bossAlive) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                TFireA(1);
                wait(waitTime);
                TFireA(-1);
            }
        }
        yield;
    }
}

task TFireA(int dir_) {
    if (!_bossAlive) return;
    Primitive_ContractPolygon2D(_bossX, _bossY, 45, 100, 0, 20, 32, COLOR_GRAY_D, false, RP_STG_EFF_MID);
    wait(3);
    Particle_ContractRing(_bossX, _bossY, 0, 100, 90 * dir_, 20, 8, COLOR_GRAY_D);
    wait(3);
    Particle_ContractRing(_bossX, _bossY, 0, 100, 90 * dir_, 20, 8, COLOR_GRAY_L);
    wait(20);

    for (int i = 1; i <= 22; i++) {
        if (!_bossAlive) return;
        float angleT = 90 + 20 * dir_ + Interpolate_Decelerate(0, 320, i / 22) * dir_;
        int shot = CreateShotUA1(_bossX, _bossY, 14, angleT, SHOT_BLACK+PILL_L, 0, SHOT_BLACK+CANCEL_32);
        ObjShot_SetSpellResist(shot, true);
        TSpawnRing(shot, i);
        CallSFX(SND_SHOT1);
        if ([true, true, false][_diff]) wait(Interpolate_Decelerate(12, 2, i / 22));
        else wait(4);
    }

    task TSpawnRing(int obj_, int modif_) {
        wait(rand_int(2, 5));
        int numShot = [2, 3, 3][_diff];
        loop (3) {
            if (!_bossAlive || Obj_IsDeleted(obj_)) return;
            float angleT = rand_int(0, 10) * 10;
            int color = rand_int(0, 1) == 0 ? SHOT_BLACK : SHOT_GRAY;
            for (int i = 0; i < numShot; i++) {
                CreateShotUA1(ObjMove_GetX(obj_), ObjMove_GetY(obj_), rand(0.6, 0.8), angleT, color+KUNAI, 0, color+SPAWN_S+SIZE_16, color+CANCEL_BURST1);
                angleT += 360 / numShot;
            }
            wait(7);
        }
    }
}