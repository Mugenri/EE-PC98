#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Spell 2"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _diff = GetDifficulty() - D_EASYEX;
int _count = -120;
int _loopTime = 90;
_spellID = 9 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(4000);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(50 + absolute(_count / 60));
    }
    case (EV_REQUEST_SPELL_SCORE) {
        SetScriptResult(1000000);
    }
}

@Initialize {
    Boss_Init(false);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    ObjEnemyBossScene_StartSpell(_objScene);
    TInitialize();
    TFinalize();
    TMain();
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, MID_Y, 30, LERP_DECELERATE);
    wait(30);
    Transition_Spell(2, 2, 0);
    CallSFX(SND_TRANSITION);
    wait(120);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (Boss_Alive(_objBoss)) yield;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
    Transition_ChangeBG(0, 0);
}

task TMain() {
    int waitTime = [90, 90, 10][_diff];
    while (_count < -30) yield;
    while (Boss_Alive(_objBoss)) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                TSlugShot();
                wait(45);
                TSlugShot();
            }
        }
        if (_count % waitTime == 0 && _count >= 0) {
            TSkewer();
        }
        yield;
    }
}

task TSlugShot() {
    //bullet move in sine wave but slow down and speed up, leave a trail of bullets
    if (!Boss_Alive(_objBoss)) return;
    float radius = 270;
    float angleT = GetAngleToPlayer(_objBoss) + rand(140, 220); //don't spawn directly behind the player
    float xPos = MID_X + radius * cos(angleT);
    float yPos = MID_Y + radius * sin(angleT);
    angleT = dottheta(xPos, yPos, MID_X, MID_Y) - 30 + rand(-8, 8);

    int head = CreateShotUA1(xPos, yPos, 0, angleT, SHOT_GRAY+BUTTERFLY, 0, SHOT_GRAY+CANCEL_32);
    ObjShot_SetAutoDelete(head, false);
    ObjShot_SetSpellResist(head, true);
    TMovement(head);
    wait(8);
    loop ([3, 5, 6][_diff]) {
        if (!Boss_Alive(_objBoss)) return;
        int trail = CreateShotUA1(xPos, yPos, 0, angleT, SHOT_GRAY_INV+PILL_L, 0, SHOT_GRAY_INV+CANCEL_32);
        ObjShot_SetSpellResist(trail, true);
        ObjShot_SetAutoDelete(trail, false);
        TMovement(trail);
        wait(8);
    }

    task TMovement(int obj_) {
        async {
            wait(360);
            if (!Obj_IsDeleted(obj_)) ObjShot_SetAutoDelete(obj_, true);
        }
        async {
            while (!Obj_IsDeleted(obj_) && Boss_Alive(_objBoss)) {
                int objTrail = CreateShotUA1(ObjMove_GetX(obj_), ObjMove_GetY(obj_), 0.6, ObjMove_GetAngle(obj_) + 90 + rand(-40, 40), SHOT_YELLOW+BALL_SS, 0, SHOT_YELLOW+SPAWN_E+SIZE_8, SHOT_YELLOW+CANCEL_BURST1);
                objTrail = CreateShotUA1(ObjMove_GetX(obj_), ObjMove_GetY(obj_), 0.6, ObjMove_GetAngle(obj_) - 90 + rand(-40, 40), SHOT_YELLOW+BALL_SS, 0, SHOT_YELLOW+SPAWN_E+SIZE_8, SHOT_YELLOW+CANCEL_BURST1);
                wait(rand_int(110, 155));
            }
        }
        float accel = 0.11;
        float wvel = 1.4;
        int frame = 35;
        while (!Obj_IsDeleted(obj_)) {
            ObjMove_AddPatternA2(obj_, 0, NO_CHANGE, NO_CHANGE, accel, 1.8, 1);
            ObjMove_AddPatternA2(obj_, frame, NO_CHANGE, NO_CHANGE, -accel, 0, NO_CHANGE);
            ObjMove_AddPatternA2(obj_, frame * 2, NO_CHANGE, NO_CHANGE, accel, 1.8, -1);
            ObjMove_AddPatternA2(obj_, frame * 3, NO_CHANGE, NO_CHANGE, -accel, 0, NO_CHANGE);
            wait(frame * 4);
        }
    }
}

task TSkewer() {
    Animation_Charge(_objBoss, true);
    float angleT = GetAngleToPlayer(_objBoss);
    float modif = 0;
    Laser_WarningLine(Boss_X(_objBoss), Boss_Y(_objBoss), angleT, 280, 45);
    Particle_ContractRing(Boss_X(_objBoss), Boss_Y(_objBoss), 0, 32, 90, 37, 8, COLOR_BLACK);
    wait(8);
    Particle_ContractRing(Boss_X(_objBoss), Boss_Y(_objBoss), 0, 32, -90, 37, 8, COLOR_GRAY_D);
    wait(37);
    float minSpeed = [0, 0, 3][_diff];
    if (!Boss_Alive(_objBoss)) return;
    for (int i = 0; i < 15; i++) {
        CreateShotUA1(Boss_X(_objBoss), Boss_Y(_objBoss), 12 - Interpolate_Decelerate(0, 12 - minSpeed, i / 16), angleT + modif, SHOT_BLACK+CARD, 30 - i * 2, SHOT_BLACK+CANCEL_FADE);
        if ([false, false, true][_diff]) modif = rand(-5, 5);
    }
    CallSFX(SND_SHOT1);
}