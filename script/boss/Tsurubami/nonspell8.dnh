#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nonspell 8"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _diff = GetDifficulty() - D_EASYEX;
int _count = -60;
int _loopTime = 700;
_spellID = 45 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(1600);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(40 + absolute(_count / 60));
    }
}

@Initialize {
    Boss_Init(true);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    TInitialize();
    TFinalize();
    TMain();
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 30, LERP_DECELERATE);
    wait(60);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (_bossAlive) yield;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
}

task TMain() {
    while (_count < -30) yield;
    while (_bossAlive) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                TFire(1);
                wait(_loopTime / 2);
                TFire(-1);
            }
        }
        yield;
    }
}

task TFire(int dir_) {
    if (!_bossAlive) return;

    CallSFX(SND_CHARGE1);
    Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 100, 0, 40, 32, COLOR_RED, false, RP_STG_EFF_MID);
    wait(10);
    if (!_bossAlive) return;
    Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 100, 0, 40, 32, COLOR_WHITE, false, RP_STG_EFF_MID);
    wait(10);
    if (!_bossAlive) return;
    Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 100, 0, 40, 32, COLOR_GRAY, false, RP_STG_EFF_MID);
    wait(40);
    if (!_bossAlive) return;

    int moveTime = 60;
    bool moving = true;

    ObjMove_SetDestAtFrame(_objBoss, MID_X + ((MID_X + 32) * dir_) , 60, moveTime, LERP_ACCELERATE);
    TTrail();
    wait(moveTime);
    ObjMove_SetPosition(_objBoss, MID_X + ((MID_X + 32) * -dir_), 60);

    while (moveTime > 10) {
        ObjMove_SetDestAtFrame(_objBoss, MID_X + ((MID_X + 32) * dir_) , 60, moveTime, LERP_LINEAR);
        wait(moveTime);
        if (!_bossAlive) return;
        ObjMove_SetPosition(_objBoss, MID_X + ((MID_X + 32) * -dir_), 60);
        moveTime *= 0.7;
    }

    ObjMove_SetDestAtFrame(_objBoss, MID_X + rand(-80, 80), 60, 8, LERP_LINEAR);
    wait(8);
    if (!_bossAlive) return;
    moving = false;

    //explosion
    int shotNum = [40, 48, 96][_diff];
    float baseMax = [5.0, 5.8, 6.0][_diff];
    loop (2) {
        float angleT = 90;
        loop (shotNum) {
            CreateShotUA2(ObjMove_GetX(_objBoss) + 60 * cos(angleT), ObjMove_GetY(_objBoss) + 60 * sin(angleT), baseMax - 0.8, angleT + (90 * dir_) + 45, -0.06, 2.8, 0, SHOT_BLACK+TALISMAN_A, 0, SHOT_BLACK+SPAWN_S+SIZE_16, SHOT_BLACK+CANCEL_BURST2);
            CreateShotUA2(ObjMove_GetX(_objBoss) + 60 * cos(angleT), ObjMove_GetY(_objBoss) + 60 * sin(angleT), baseMax - 0.4, angleT + (90 * dir_) + 45, -0.06, 3.0, 0, SHOT_RED+TALISMAN_A, 0, SHOT_RED+SPAWN_S+SIZE_16, SHOT_RED+CANCEL_BURST2);
            CreateShotUA2(ObjMove_GetX(_objBoss) + 60 * cos(angleT), ObjMove_GetY(_objBoss) + 60 * sin(angleT), baseMax, angleT + (90 * dir_) + 45, -0.06, 3.2, 0, SHOT_RED_INV+TALISMAN_A, 0, SHOT_RED_INV+SPAWN_S+SIZE_16, SHOT_RED_INV+CANCEL_BURST2);
            angleT += 360 / shotNum;
        }
        dir_ *= -1;
    }

    shotNum = [52, 64, 80][_diff];
    float angleT = rand(0, 360);
    float speed = [2.4, 2.5, 2.6][_diff];
    loop (shotNum) {
        CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), speed, angleT, SHOT_RED+CARD, 0, SHOT_RED+CANCEL_FADE);
        angleT += 360 / shotNum;
    }

    CallSFX(SND_SHOT4);

    task TTrail() {
        int loopCount = 0;
        float minSpeed = [4.2, 4.5, 8.5][_diff];
        float maxSpeed = [8, 14, 20][_diff];
        int maxWait = [14, 12, 4][_diff];
        int way = [7, 8, 18][_diff];
        while (moving) {
            if (!_bossAlive) return;
            int color = [SHOT_GRAY, SHOT_BLACK, SHOT_RED_INV][loopCount % 3];
            float angleT = GetAngleToPlayer(_objBoss);
            loop (way) {
                CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), Interpolate_Linear(maxSpeed, minSpeed, moveTime / 60), angleT, color+CARD, 0, color+SPAWN_S+SIZE_16, color+CANCEL_FADE);
                CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), Interpolate_Linear(maxSpeed, minSpeed, moveTime / 60), angleT - 2, color+CARD, 0, color+SPAWN_S+SIZE_16, color+CANCEL_FADE);
                CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), Interpolate_Linear(maxSpeed, minSpeed, moveTime / 60), angleT + 2, color+CARD, 0, color+SPAWN_S+SIZE_16, color+CANCEL_FADE);
                angleT += 360 / way;
            }
            CallSFX(SND_SHOT1);
            loopCount++;
            wait(Interpolate_Linear(1, maxWait, moveTime / 60));
        }
    }
}