#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["nonspell1"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _count = -60;
int _loopTime = 240;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(3000); 
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(60);
    }
}

@Initialize {
    Boss_Init(true);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI, MID_X, 60);
    TInitialize();
    TFinalize();
}

@MainLoop {
    Boss_Update(_objBoss);
    if (_bossAlive) {
        Boss_SetIntersection(_objBoss, intersectionShot, intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                Animation_Charge(true);
                TFireA(1);
                wait(60);
                TFireA(-1);
                wait(60);
                TFireB();
                wait(60);
                Animation_Charge(false);
            }
        }
        _count++;
    }
    yield;
}

task TInitialize() {
    wait(60);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (_bossAlive) yield;
    Animation_Charge(false);
    Boss_Finalize(_objBoss);
}

task TFireA(int dir_) {
    if (!_bossAlive) return;
    Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 45, 100, 0, 30, 32, COLOR_WHITE, false, RP_STG_EFF_MID);
    wait(3);
    Particle_ContractRing(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 100, 90 * dir_, 30, 8, COLOR_GRAY_L);
    wait(30);

    if (!_bossAlive) return;
    int objAmulet = CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 5, 90 + 50 * dir_, SHOT_BLACK+CARD, 0, SHOT_BLACK+SPAWN_S+SIZE_16, SHOT_BLACK+CANCEL_FADE);
    ObjShot_SetSpellResist(objAmulet, true);
    ObjMove_SetAngularVelocity(objAmulet, -0.4 * dir_);
    CallSFX(SND_SHOT3);

    wait(20);
    for (int i = 0; i < 12; i++) {
        if (!_bossAlive || Obj_IsDeleted(objAmulet)) return;
        real x = ObjMove_GetX(objAmulet);
        real y = ObjMove_GetY(objAmulet);
        if (i % 2 == 0) TShotA(x, y);
        else TShotB(x, y);
        CallSFX(SND_SHOT1);
        wait(6);
    }

    task TShotA(real x_, real y_) { //exploding ring
        int objShotA = CreateShotUA1(x_, y_, 0, 0, SHOT_BLACK+BALL_S, 0, SHOT_BLACK+SPAWN_E+SIZE_16, SHOT_BLACK+CANCEL_FADE);
        wait(60);
        if (!_bossAlive || Obj_IsDeleted(objShotA)) return;
        real x = ObjMove_GetX(objShotA);
        real y = ObjMove_GetY(objShotA);
        real angle = rand(0, 360);
        if (!Obj_IsDeleted(objShotA)) Obj_Delete(objShotA);

        loop (7) { //ring of bullets
            real speedMod = rand (-0.2, 0.2);
            CreateShotUA1(x, y, 0.9 + speedMod, angle, SHOT_WHITE+PILL_S, 0, SHOT_WHITE+SPAWN_S+SIZE_16, SHOT_WHITE+CANCEL_FADE);
            angle += 360 / 7;
        }
    }

    task TShotB(real x_, real y_) { //x way split
        real angle = 0;
        loop (5) {
            int obj = CreateShotUA1(x_, y_, 0, ObjMove_GetAngle(objAmulet) + angle, SHOT_BLACK+BALL_S, 0, SHOT_BLACK+SPAWN_E+SIZE_16, SHOT_BLACK+CANCEL_FADE);
            ObjMove_AddPatternA1(obj, 60, 1.3, NO_CHANGE);
            angle += 360 / 5;
        }
    }
}

task TFireB() {
    if (!_bossAlive) return;
    Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 45, 100, 0, 30, 32, COLOR_WHITE, false, RP_STG_EFF_MID);
    wait(3);
    Particle_ContractRing(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 15, 100, 90, 30, 8, COLOR_GRAY_L);
    Particle_ContractRing(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), -15, 100, -90, 30, 8, COLOR_GRAY_L);
    wait(30);

    if (!_bossAlive) return;
    int dir = 1;
    loop (2) {
        int objAmulet = CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 5, 90 - 80 * dir, SHOT_BLACK+CARD, 0, SHOT_BLACK+SPAWN_S+SIZE_16, SHOT_BLACK+CANCEL_FADE);
        ObjShot_SetSpellResist(objAmulet, true);
        ObjMove_SetAngularVelocity(objAmulet, 4 * dir);
        ObjMove_AddPatternA2(objAmulet, 60, NO_CHANGE, NO_CHANGE, NO_CHANGE, 0, NO_CHANGE);
        TGravityShot(objAmulet);
        dir = -1;
    }
    CallSFX(SND_SHOT3);

    task TGravityShot(int obj_) {
        wait(20);
        loop {
            if (!_bossAlive || Obj_IsDeleted(obj_)) return;
            loop (2) {
                CreateShotUB2(ObjMove_GetX(obj_), ObjMove_GetY(obj_), rand(-0.35, 0.35), -0.5, 0, 0.02 + rand(-0.01, 0.01), 0, 1.5, SHOT_BLACK+BALL_S, 0, SHOT_BLACK+SPAWN_S+SIZE_16, SHOT_BLACK+CANCEL_FADE);
            }
            CallSFX(SND_SHOT1);
            wait(6);
        }
    }
}