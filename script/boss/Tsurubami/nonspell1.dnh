#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["nonspell1"]
#System["./../../system/System.dnh"]
#Background["./../../system/TestBG.dnh"]

#include "./../../lib/bullet/lib_TsuruShot.dnh"
#include "./../../lib/lib_Common.dnh"
#include "./tsuruAnime.dnh"
#include "./lib_Tsuru.dnh"

let objBoss;
let count = -180;
let loopTime = 60;
objScene = GetEnemyBossSceneObjectID();

@Event {
    alternative(GetEventType())
    case(EV_REQUEST_LIFE) {
        SetScriptResult(350);
    }
    case(EV_REQUEST_TIMER) {
        SetScriptResult(60);
    }
    case(EV_REQUEST_SPELL_SCORE) {
        SetScriptResult(1000000);
    }
}

@Initialize {
    objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
    ObjEnemy_Regist(objBoss);
    ObjMove_SetPosition(objBoss, MID_X, 60);

    //BombBarrier();

    DrawBoss(objBoss);
    TFinalize;
}

@MainLoop {
    ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
    ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
    if (count % loopTime == 0 && count >= 0) {
        PatternA;
    }
    count++;

    yield;
}

task TFinalize {
    while (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {yield;}
    Obj_Delete(objBoss);

    let score = 10;
    let scoreBonus = 10;
    let numBullets = 0;
    //Need to put in a library, not do this if the spell is timed out
    //Actual MS bullet cancel score progression
    for each (shot in GetShotIdInCircleA2(MID_X, MID_Y, 500, TARGET_ENEMY)) {
        numBullets++;
        Obj_SetValueI(shot, BULLET_SCORE, score);
        if(numBullets <= 35){
            Obj_SetValueI(shot, BULLET_DROP_ITEM, true);
        }
        //ObjShot_ToItem(shot);
        score += scoreBonus;
        scoreBonus += 30;
        score = min(score, 12800);
    }
    //^^
    DeleteShotAll(TYPE_SHOT, TYPE_ITEM);
    SetAutoDeleteObject(true);
    CloseScript(GetOwnScriptID());
    return;
}

task PatternA{
    AnimeCharge();
    wait(20);
    if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) {return;}
    let angleT = rand(0, 360);
    loop(5) {
        let id = 1;
        loop(10) {
            let obj = CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 4, angleT, id, 20);
            angleT += 360/10;
            id++;
            yield;
        }
    }
    wait(10);
    AnimeCharge();
}