#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["spell5"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objClone; //second hitbox
int _objBoss;
int _diff = GetDifficulty() - 4;
int _count = -360;
int _loopTime = 190;
int _spellID = 9 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult([0, 3800]);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(50 + absolute(_count / 60));
    }
    case (EV_REQUEST_SPELL_SCORE) {
        SetScriptResult(350000);
    }
}

@Initialize {
    Boss_Init(false);
    _objClone = Boss_Create(BOSS_ID_TSURUBAMI);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    ObjRender_SetColor(_objClone, COLOR_BLACK);
    Spell_SetCurrent(_spellID, true);
    TInitialize();
    TFinalize();
    TMain();
    TBounds();
    TMovement(_objBoss, 1);
    TMovement(_objClone, -1);
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, MID_Y, 30, LERP_DECELERATE);
    ObjMove_SetDestAtFrame(_objClone, MID_X, MID_Y, 30, LERP_DECELERATE);
    wait(30);
    Transition_Rise(1, 0);
    CallSFX(SND_TRANSITION);
    wait(330);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (_bossAlive) yield;
    Obj_Delete(_objClone);
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
    Transition_ChangeBG(0, 0);
}

task TMain() {
    wait(150);
    TSplit();
    while (_count < -30) yield;
    while (_bossAlive) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        Boss_SetIntersection(_objBoss, _objClone, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                wait(30);
                TFire();
            }
        }
        yield;
    }
}

task TMovement(int obj_, int dir_) {
    while (_count < 0) yield;
    while (_bossAlive) {
        real x = 0.5 + 0.5 * (-cos(_count));
        real y = 0.5 + 0.5 * (sin(_count));
        real xPos = Interpolate_Linear(MID_X - 150 * dir_, MID_X + 150 * dir_, x);
        real yPos = Interpolate_Linear(MID_Y - 150 * dir_, MID_Y + 150 * dir_, y);
        ObjMove_SetDestAtFrame(obj_, xPos, yPos, 1);
        yield;
    }
}

task TBounds() {
    while (_count < 0) yield;
    while (_bossAlive) {
        real x1 = ObjMove_GetX(_objBoss);
        real y1 = ObjMove_GetY(_objBoss);
        real angleT = dottheta(MID_X, MID_Y, x1, y1);
        real x2 = MID_X + 150 * cos(angleT + 180);
        real y2 = MID_Y + 150 * sin(angleT + 180);
        CreateShotUA1(x1, y1, 1.0, angleT, SHOT_GRAY+TALISMAN_A, 0, SHOT_GRAY+SPAWN_E+SIZE_16, SHOT_GRAY+CANCEL_BURST2);
        CreateShotUA1(x1, y1, 0.5, angleT + 12, SHOT_GRAY+TALISMAN_A, 2, SHOT_GRAY+SPAWN_E+SIZE_16, SHOT_GRAY+CANCEL_BURST2);
        CreateShotUA1(x1, y1, 0.2, angleT + 90, SHOT_GRAY+TALISMAN_A, 4, SHOT_GRAY+SPAWN_E+SIZE_16, SHOT_GRAY+CANCEL_BURST2);
        CreateShotUA1(x2, y2, 1.0, angleT + 180, SHOT_BLACK+TALISMAN_A, 0, SHOT_BLACK+SPAWN_E+SIZE_16, SHOT_BLACK+CANCEL_BURST2);
        CreateShotUA1(x2, y2, 0.5, angleT + 12 + 180, SHOT_BLACK+TALISMAN_A, 2, SHOT_BLACK+SPAWN_E+SIZE_16, SHOT_BLACK+CANCEL_BURST2);
        CreateShotUA1(x2, y2, 0.2, angleT + 90 + 180, SHOT_BLACK+TALISMAN_A, 4, SHOT_BLACK+SPAWN_E+SIZE_16, SHOT_BLACK+CANCEL_BURST2);
        CallSFX(SND_SHOT1);
        wait(6);
    }
}

task TSplit() {
    Animation_Charge(_objBoss, true);
    CallSFX(SND_CHARGE1);

    loop (2) {
        Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 350, 0, 100, 32, COLOR_BLACK, false, RP_STG_EFF_MID);
        wait(2);
    }
    loop (3) {
        Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 350, 0, 100, 32, COLOR_GRAY_D, false, RP_STG_EFF_MID);
        wait(2);
    }
    loop (3) {
        Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 350, 0, 100, 32, COLOR_GRAY_L, false, RP_STG_EFF_MID);
        wait(2);
    }
    loop (2) {
        Primitive_ContractPolygon2D(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 350, 0, 100, 32, COLOR_WHITE, false, RP_STG_EFF_MID);
        wait(2);
    }
    wait(100);

    CallSFX(SND_SHOT2);
    Animation_Charge(_objBoss, false);

    ObjMove_SetDestAtFrame(_objBoss, MID_X - 150, MID_Y, 60, LERP_DECELERATE);
    ObjMove_SetDestAtFrame(_objClone, MID_X + 150, MID_Y, 60, LERP_DECELERATE);
}

task TFire() {
    if (!_bossAlive) return;

    int[] shots = [];
    
    //tsuru burst fire
    real radius = rand(0, 5);
    real angleT = ObjMove_GetAngle(_objBoss) - 90;
    int waitTime = [0, 1][_diff];
    int numShot = [17, 64][_diff];
    int moveTime = [110, 50][_diff];
    loop (numShot) {
        if (!_bossAlive) return;
        real radius = 150;
        real xPos = MID_X + radius * cos(angleT);
        real yPos = MID_Y + radius * sin(angleT);
        int shot = CreateShotUA1(ObjMove_GetX(_objBoss), ObjMove_GetY(_objBoss), 0, 0, SHOT_GRAY+PILL_A, 0, SHOT_GRAY+CANCEL_32);
        ObjShot_SetSpellResist(shot, true);
        ObjMove_SetDestAtFrame(shot, xPos, yPos, moveTime, LERP_ACCELERATE);
        shots = shots ~ [shot];
        CallSFX(SND_SHOT3);
        angleT += 360 / numShot;
        wait(waitTime);
    }

    wait([80, 30][_diff]);
    if (!_bossAlive) return;

    //clone lasers
    int time = [70, 50][_diff];
    for each (shot in shots) { //create straight laser for each shot
        TLaser(shot, time);
        if (_diff == 1) yield;
    }

    task TLaser(int shot_, int time_) { //draw laser from boss to shot
        int warning = Laser_WarningLine(0, 0, 0, 0, time_);
        real bX;
        real bY;
        real sX;
        real sY;
        real angleT;
        loop (time_) {
            if (Obj_IsDeleted(shot_) || !_bossAlive) {
                if (!Obj_IsDeleted(warning)) Obj_Delete(warning);
                return;
            }
            bX = ObjMove_GetX(_objClone);
            bY = ObjMove_GetY(_objClone);
            sX = ObjMove_GetX(shot_);
            sY = ObjMove_GetY(shot_);
            angleT = dottheta(bX, bY, sX, sY);
            ObjPrim_SetVertexPosition(warning, 0, bX, bY, 1);
            ObjPrim_SetVertexPosition(warning, 1, bX + 500 * cos(angleT), bY + 500 * sin(angleT), 1);
            yield;
        }

        if (Obj_IsDeleted(shot_) || !_bossAlive) return;
        CreateLooseLaserUA1(bX, bY, [14, 20][_diff], angleT, 140, COLOR_BLACK, 0);
        CallSFX(SND_LASER2);

        real dist = distance(bX, bY, sX, sY);
        wait(dist / 14);
        angleT = rand(0, 360);
        ObjShot_SetDeleteFrame(shot_, 0);
    }
}