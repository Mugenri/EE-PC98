//TODO this whole fuckin thing needs work
bool _charge = false;
bool _monochrome = false;
int _frameCount = 0;
int _frameCountCharge = 0;

task TDrawBoss(int objBoss_) {
    ObjPrim_SetTexture(objBoss_, IMG_STG_TSURUBAMI);
    ObjSprite2D_SetSourceRect(objBoss_, 0, 0, 64, 64);
    ObjSprite2D_SetDestCenter(objBoss_);
    Obj_SetRenderPriorityI(objBoss_, RP_STG_ENEMY);

    ObjShader_SetShaderF(objBoss_, HLSL_WHITE);
    ObjShader_SetTechnique(objBoss_, "TecWhite");

    int frame_ = 0;
    int frameCharge_ = 0;

    bool isFlashing = false;

    while (!Obj_IsDeleted(objBoss_)) {
         if (_monochrome || ObjMove_GetSpeed(objBoss_) > 0) { //_monochrome frame
            ObjSprite2D_SetSourceRect(objBoss_, 64 * 5, 0, 64 * 6, 64);
        } else if (_frameCountCharge == 0) { //idle animation
            frame_ = floor(_frameCount / 30);
            ObjSprite2D_SetSourceRect(objBoss_, (64 * frame_), 0, 64 * (frame_ + 1), 64);
        } else if ((_charge || _frameCountCharge > 0)) { //_charge anim
            frameCharge_ = floor(_frameCountCharge / 8);
            ObjSprite2D_SetSourceRect(objBoss_, 64 * frameCharge_, 0, 64 * (frameCharge_ + 1), 64);
        }
        _frameCount++;
        if (_frameCount >= 60 || _frameCountCharge > 0 || _monochrome) _frameCount = 0;
        if (_charge && _frameCountCharge < 32) _frameCountCharge++;
        if (!_charge && _frameCountCharge > 0) _frameCountCharge--;

        //flash on hit
        if (isFlashing == false && _isDamaged) { //TODO its possible for this to stay white if the single ends and the player stops shooting
            isFlashing = true;
            async {
                loop (3) {
                    ObjShader_SetFloat(objBoss_, "enable_", 1);
                    yield;
                    ObjShader_SetFloat(objBoss_, "enable_", 0);
                    wait(3);
                }
                isFlashing = false;
            }
        }
        yield;
    }
}

function<void> AnimeCharge() {
    _charge = !_charge;
}

function<void> AnimeMonochrome() {
    _monochrome = !_monochrome;
}