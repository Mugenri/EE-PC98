#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nonspell 13"]
#System["./../../system/System.dnh"]

#include "./../../lib/lib_Boss.dnh"

int _objBoss;
int _diff = GetDifficulty() - D_EASYEX;
int _count = -60;
int _loopTime = [560, 450, 450][_diff];
_spellID = 81 + _diff;

@Event {
    alternative (GetEventType())
    case (EV_REQUEST_LIFE) {
        SetScriptResult(3500);
    }
    case (EV_REQUEST_TIMER) {
        SetScriptResult(45 + absolute(_count / 60));
    }
}

@Initialize {
    Boss_Init(true);
    _objBoss = Boss_Create(BOSS_ID_TSURUBAMI);
    TInitialize();
    TFinalize();
    TMain();
}

@MainLoop {
    Boss_Update(_objBoss);
    _count++;
    yield;
}

task TInitialize() {
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 30, LERP_DECELERATE);
    wait(60);
    Boss_SetVulnerable(_objBoss, true);
}

task TFinalize() {
    while (Boss_Alive(_objBoss)) yield;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 60, LERP_DECELERATE);
    Animation_Charge(_objBoss, false);
    Boss_Finalize(_objBoss);
}

task TMain() {
    while (_count < -30) yield;
    while (Boss_Alive(_objBoss)) {
        Boss_SetIntersection(_objBoss, _intersectionShot, _intersectionPlayer);
        if (_count % _loopTime == 0 && _count >= 0) {
            async {
                TRings();
            }
        }
        yield;
    }
}

task TRings() {
    //leading shot then speed laser
    if (!Boss_Alive(_objBoss)) return;
    int loopNum = 4;
    int way = [38, 48, 64][_diff];
    int color = SHOT_GRAY;
    float sMin = [2.3, 2.3, 2.9][_diff];
    float sMax = [2.6, 2.6, 3.3][_diff];
    float lMin = [3, 5, 8][_diff];
    float lInc = [2.2, 3, 3][_diff];
    float angleT = rand(0, 360);

    float laserLen = [145, 145, 190][_diff];

    int waitTime = [40, 20, 10][_diff];
    int graceTime = [60, 50, 50][_diff];
    int ring = Shot_CreatePattern(Boss_X(_objBoss), Boss_Y(_objBoss), PATTERN_SCATTER_SPEED, way, 1, sMin, sMax, angleT, 360 / way, 0, 0);

    for (int i = 1; i <= loopNum; i++) {
        if (!Boss_Alive(_objBoss)) return;
        float xPos = Boss_X(_objBoss);
        float yPos = Boss_Y(_objBoss);
        ObjPatternShot_SetBasePoint(ring, xPos, yPos);
        Shot_FirePatternA(ring, color+CARD, color+SPAWN_S+SIZE_16, color+CANCEL_FADE);
        CallSFX(SND_SHOT2);
        int colorL = color == SHOT_GRAY ? COLOR_GRAY_L : COLOR_RED;
        Particle_ContractRing(xPos, yPos, 0, 120, 180, graceTime, 8, colorL);
        Particle_ContractRing(xPos, yPos, 0, 120, -180, graceTime, 8, colorL);
        Boss_MoveRadiusInBounds(_objBoss, 32, 48, MID_X - 64, MID_X + 64, 40, 80, 40, LERP_DECELERATE);
        
        wait(graceTime);
        if (!Boss_Alive(_objBoss)) return;
        float temp = angleT;
        for (int k = 0; k < way; k++) {
            CreateLooseLaserUA1(xPos, yPos, lMin + lInc * i, temp, laserLen, colorL, 0);
            temp += 360 / way;
        }
        CallSFX(SND_LASER2);
        //next wave
        angleT = rand(0, 360);
        ObjPatternShot_SetAngle(ring, angleT, 360 / way);
        color = color == SHOT_GRAY ? SHOT_RED_INV : SHOT_GRAY;
        wait(waitTime);
    }
    if (!Boss_Alive(_objBoss)) return;
    ObjMove_SetDestAtFrame(_objBoss, MID_X, 60, 40, LERP_DECELERATE);
    wait(40);
    if (!Boss_Alive(_objBoss)) return;

    way = [16, 20, 72][_diff];
    int numRing = [5, 6, 3][_diff];
    sMax = [3, 2.5, 3][_diff];
    angleT = rand(0, 360);
    float radius = 64;
    graceTime = [100, 100, 120][_diff];
    ObjPatternShot_SetShotCount(ring, way, 1);
    ObjPatternShot_SetSpeed(ring, sMax, sMax);
    ObjPatternShot_SetAngle(ring, angleT, 360 / way);

    float temp = [90, 90, 90][_diff];
    for (int i = 0; i < numRing; i++) {
        ObjPatternShot_SetBasePoint(ring, Boss_X(_objBoss) + radius * cos(temp), Boss_Y(_objBoss) + radius * sin(temp));
        Shot_FirePatternA(ring, SHOT_BLACK+CARD, SHOT_BLACK+SPAWN_S+SIZE_16, SHOT_BLACK+CANCEL_FADE);
        temp += 360 / numRing;
    }
    CallSFX(SND_SHOT2);
    CallSFX(SND_CHARGE1);

    Animation_Charge(_objBoss, true);
    Particle_ContractRing(MID_X, 60, 0, 120, 180, graceTime - 6, 8, COLOR_WHITE);
    Particle_ContractRing(MID_X, 60, 0, 120, -180, graceTime - 6, 8, COLOR_WHITE);
    wait(3);
    Particle_ContractRing(MID_X, 60, 0, 120, 180, graceTime - 6, 8, COLOR_GRAY_L);
    Particle_ContractRing(MID_X, 60, 0, 120, -180, graceTime - 6, 8, COLOR_GRAY_L);
    wait(3);
    Particle_ContractRing(MID_X, 60, 0, 120, 180, graceTime - 6, 8, COLOR_GRAY);
    Particle_ContractRing(MID_X, 60, 0, 120, -180, graceTime - 6, 8, COLOR_GRAY);

    wait(graceTime - 6);
    if (!Boss_Alive(_objBoss)) return;

    for (int i = 0; i < numRing; i++) {
        float xPos = Boss_X(_objBoss) + radius * cos(temp);
        float yPos = Boss_Y(_objBoss) + radius * sin(temp);
        float angle = angleT;
        for (int j = 0; j < way; j++) {
            CreateLooseLaserUA1(xPos, yPos, lMin + lInc * 4, angle, 500, COLOR_BLACK, 0);
            angle += 360 / way;
        }
        temp += 360 / numRing;
    }
    CallSFX(SND_LASER2);
    wait(20);
    Animation_Charge(_objBoss, false);
}