//Stage texture/script loading/unloading library

//TEXTURES
//Stage Textures
function<void> Load_LoadTextureStage(int stageIndex_) {
    for each (img in Load_GetTextureStage(stageIndex_)) {
        LoadTexture(img);
        yield;
    }
}

function<void> Load_UnloadTextureStage(int stageIndex_) {
    for each (img in Load_GetTextureStage(stageIndex_)) {
        RemoveTexture(img);
        yield;
    }
}

function<string[]> Load_GetTextureStage(int stageIndex_) {
    string[] texture = [];

    alternative (stageIndex_)
    case (0) { //Tsurubami
        texture ~= [
            IMG_STG_TSURUBAMI,
            IMG_BG_TSURUBAMI
        ];
    }
    case (1) { //Tsurubami 2
        texture ~= [
            IMG_STG_TSURUBAMI,
            IMG_BG_TSURUBAMI_2,
            IMG_SHOT_TSURUBAMI
        ];
    }

    return texture;
}

//Dialogue Textures
function<void> Load_LoadTextureDialogue(int stageIndex_, int playerType_) {
    for each (img in Load_GetTextureDialogue(stageIndex_, playerType_)) {
        LoadTexture(img);
        yield;
    }
}

function<void> Load_UnloadTextureDialogue(int stageIndex_, int playerType_) {
    for each (img in Load_GetTextureDialogue(stageIndex_, playerType_)) {
        RemoveTexture(img);
        yield;
    }
}

function<string[]> Load_GetTextureDialogue(int stageIndex_, int playerType_) {
    string[] texture = [IMG_SYSTEM_TEXTBOX]; //dialogue textbox

    alternative (stageIndex_)
    case (0, 1) { texture ~= [IMG_PORTRAIT_TSURUBAMI]; }

    alternative (playerType_)
    case (PLAYER_YABUSAME)  { texture ~= [IMG_PORTRAIT_YABUSAME]; }
    case (PLAYER_TSUBAKURA) { texture ~= [IMG_PORTRAIT_TSUBAKURA]; }

    return texture;
}

//Player Textures
function<void> Load_LoadTexturePlayer(int playerType_) {
    for each (img in Load_GetTexturePlayer(playerType_)) {
        LoadTexture(img);
        yield;
    }
}

function<void> Load_UnloadTexturePlayer(int playerType_) {
    for each (img in Load_GetTexturePlayer(playerType_)) {
        RemoveTexture(img);
        yield;
    }
}

function<string[]> Load_GetTexturePlayer(int playerType_) {
    string[] texture = [];

    alternative (playerType_)
    case (PLAYER_YABUSAME) { texture ~= [IMG_PLR_YABUSAME]; }
    case (PLAYER_TSUBAKURA) { texture ~= [IMG_PLR_TSUBAKURA]; }

    return texture;
}

//SCRIPT CACHING
function<void> Load_UncacheScripts(int stageIndex_, int playerType_, int gameMode_) {
    for each (scriptPath in Load_GetStageScriptPath(stageIndex_, playerType_, gameMode_)) {
        UnloadScriptFromCache(scriptPath);
        yield;
    }
}

function<string[]> Load_GetStageScriptPath(int stageIndex_, int playerType_, int gameMode_) {
    string dir = GetModuleDirectory() ~ "script/system/";
    //System scripts
    string[] scriptPath = [
        dir ~ "System.dnh",
        dir ~ "ControlItem.dnh",
        dir ~ "StageMenu.dnh"
    ];

    //Stage scripts
    scriptPath ~= Spell_GetPathList(stageIndex_);
    alternative (stageIndex_)
    case (0) { //Tsurubami
        dir = DIR_STG ~ "tsurubami/";
        scriptPath ~= [
            dir ~ "tsuruStage.dnh",
            dir ~ "tsuruBG.dnh",
            dir ~ "tsuruPlural.dnh",
            dir ~ "dialogueIntro.dnh",
            dir ~ "dialogueOutro.dnh"
        ];
    }
    case (1) { //Tsurubami 2
        dir = DIR_STG ~ "tsurubami2/";
        scriptPath ~= [
            dir ~ "tsuru2Stage.dnh",
            dir ~ "tsuru2BG.dnh",
            dir ~ "tsuru2Plural.dnh",
            dir ~ "dialogueIntro.dnh"
        ];
    }

    //Player scripts
    alternative (playerType_)
    case (PLAYER_YABUSAME) { scriptPath ~= [DIR_PLR ~ "Yabusame.dnh"]; }
    case (PLAYER_TSUBAKURA) { scriptPath ~= [DIR_PLR ~ "Tsubakura.dnh"]; }

    //Spell practice stage script
    alternative (gameMode_)
    case (GAME_SPELL) { scriptPath ~= [DIR_STG ~ "Stage_SpellPractice.dnh"]; }

    //Debug stage
    if (DEBUG_MODE) {
        scriptPath ~= [
            DIR_STG ~ "test/testStage.dnh",
            DIR_STG ~ "test/testPlural.dnh",
            DIR_STG ~ "test/testSingle.dnh"
        ];
    }

    return scriptPath;
}