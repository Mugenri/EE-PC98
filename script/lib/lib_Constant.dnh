//Constants library
//Version number
const string GAME_VERSION = "0.01";

//Font constants/paths
const string SYS_FONT = "PC-9800";
const string SYS_FONT_PATH = GetCurrentScriptDirectory() ~ "./../system/font/PC-9800.ttf";
const string HEADER_FONT = "Magic Decimal Sharp";
const string HEADER_FONT_PATH = GetCurrentScriptDirectory() ~ "./../system/font/MagicDecimalSharp.ttf";

//Event Constants

//Stage Constants

//System Constants
const int EV_CREATE_ITEM        = EV_USER_SYSTEM + 1; //Create Item, pass (x, y, TYPE_CONSTANT)
const int EV_START_STAGE        = EV_USER_SYSTEM + 2; //Starts the dialogue/plural scripts after the stage intro animation completes
const int EV_STAGE_INTRO_START  = EV_USER_SYSTEM + 3; //Stage intro fade begins and player can move/shoot/pause the game

//Package Constants
const int EV_PLAY_BGM           = EV_USER_PACKAGE + 1; //Stops current track, plays new track. pass (trackID, fade, delay)
const int EV_PAUSE_ENABLE       = EV_USER_PACKAGE + 2; //Enable/disable pausing in the stage control script. pass (enable)
const int EV_GET_ACHIEVEMENT    = EV_USER_PACKAGE + 3; //unlock specified achievement pass (achievementID)
const int EV_STOP_BGM           = EV_USER_PACKAGE + 4; //pass true to pause, pass false to resume
const int EV_PLAY_SFX           = EV_USER_PACKAGE + 5; //Play sfx from audio script. pass (sfxID) 
const int EV_TITLE_END          = EV_USER_PACKAGE + 6; //End title screen script
const int EV_PLAYER_LOADED      = EV_USER_PACKAGE + 7; //Triggered when the player script is finished initializing
const int EV_DIALOGUE_START     = EV_USER_PACKAGE + 8; //Called to start a dialogue sequence. pass (scriptPath)
const int EV_GET_BGM_TEXT       = EV_USER_PACKAGE + 9; //returns an array of [name, comment]. pass (bgmID)
const int EV_STOP_SFX           = EV_USER_PACKAGE + 10;//Stop currently playing sfx

//Boss Name Constants
const string BOSS_ID_TSURUBAMI = "Tsurubami";
const string BOSS_ID_YABUSAME  = "Yabusame";
const string BOSS_ID_TSUBAKURA = "Tsubakura";

//Player Shot Type Constants
const int PLAYER_YABUSAME  = 0;
const int PLAYER_TSUBAKURA = 1;

//Difficulty Constants
const int D_EASY    = 0;
const int D_NORMAL  = 1;
const int D_HARD    = 2;
const int D_LUNATIC = 3;
const int D_EXTRA   = 4;
const int D_ABEX    = 5;

//Game Mode Constants
const int GAME_NONE     = 0; //None
const int GAME_MAIN     = 1; //Normal Game
const int GAME_PRACTICE = 2; //Stage Practice Mode
const int GAME_SPELL    = 3; //Spell Practice Mode

//Stage Mode Constants
const int MODE_NONE     = 0; //Normal stage start
const int MODE_RETRY    = 1; //Retry from pause menu
const int MODE_CONTINUE = 2; //After using a continue

//Sound Constants
//Title
const int SND_TT_SELECT = 0;
const int SND_TT_DECIDE = 1;
const int SND_TT_CANCEL = 2;
//Player
const int SND_PL_SHOT       = 3;
const int SND_PL_GRAZE      = 4;
const int SND_PL_HIT        = 5;
const int SND_PL_MISS       = 6;
const int SND_PL_VULNERABLE = 7;
const int SND_PL_Y_SPELL1   = 8;
const int SND_PL_Y_SPELL2   = 9;
const int SND_PL_T_SPELL1   = 10;
const int SND_PL_T_SPELL2   = 11;
const int SND_PL_T_SPELL3   = 12;
const int SND_PL_T_SPELL4   = 13;
//Stage

//Render Priority Constants
const int RP_UI_MIN      = 0;  //Min render priority
const int RP_UI_BG       = 2;  //Menu backgrounds
const int RP_UI_IMG      = 5;  //Menu/UI images
const int RP_UI_TEXT     = 10; //Menu/UI text
const int RP_STG_MIN     = 20; //Min stage render priority
const int RP_STG_BG      = 22; //Stage backgrounds
const int RP_STG_EFF_LOW = 24; //Effects that render over the background only
const int RP_STG_EFF_PLR = 27; //Player effects that render over all other background elements but not enemy sprites (spell effects etc.)
const int RP_STG_ENEMY   = 30; //Boss/Enemy sprite
const int RP_STG_PLAYER  = 40; //Player sprite/bullets
const int RP_STG_EFF_MID = 45; //Effects that render over the player/boss sprites, but below bullets
const int RP_STG_ITEM    = 50; //Items
const int RP_STG_LASER   = 56; //Enemy Lasers
const int RP_STG_SHOT    = 60; //Bullets
const int RP_STG_EFF_HI  = 65; //Effects that render over bullets
const int RP_STG_HITBOX  = 70; //Player hitbox
const int RP_STG_TEXT    = 75; //Item pickup text
const int RP_STG_END     = 78; //End of stage screen
const int RP_STG_MAX     = 80; //Max stage render priority
const int RP_UI_MAX      = 100;//Max render priority

//Position Constants
const real MIN_X = 0;
const real MIN_Y = 0;
const real MAX_X = GetStgFrameWidth();
const real MAX_Y = GetStgFrameHeight();
const real MID_X = GetStgFrameWidth() / 2;
const real MID_Y = GetStgFrameHeight() / 2;

//Item Constants
const int ITEM_POW      = 1; //Power
const int ITEM_SCORE    = 2; //Point
const int ITEM_DREAM    = 3; //Dream
const int ITEM_POW_L    = 4; //Large Power
const int ITEM_POW_FULL = 5; //Full Power
const int ITEM_BOMB     = 6; //Bomb
const int ITEM_EXTEND   = 7; //Life

//Key/Value field constants
//Shot
const int SHOT_SCORE        = 0; //How much score the bullet should give
const int SHOT_DROP_ITEM    = 1; //If the bullet spawns a point item when cancelled
const int SHOT_CANCEL       = 2; //If the bullet/laser should be given a cancel effect
const int SHOT_EFFECT       = 3; //Key field for bullet deletion effect

//Color Constants
const int COLOR_WHITE       = 0xFFFFFF;
const int COLOR_GRAY        = 0x999999;
const int COLOR_GRAY_D      = 0x666666;
const int COLOR_BLACK       = 0x000000;
const int COLOR_RED         = 0xFF0000;
const int COLOR_RED_L       = 0xFF4444; 
const int COLOR_RED_D       = 0x880000;
const int COLOR_ORANGE      = 0xFF9900;
const int COLOR_ORANGE_D    = 0xBB5500;
const int COLOR_YELLOW      = 0xFFFF00;
const int COLOR_YELLOW_L    = 0xFFFF55;
const int COLOR_YELLOW_D    = 0xDDCC44;
const int COLOR_GREEN       = 0x44BB33;
const int COLOR_GREEN_D     = 0x226622;
const int COLOR_BLUE        = 0x0000FF;
const int COLOR_BLUE_L      = 0xAAAAFF;
const int COLOR_BLUE_D      = 0x111166;
const int COLOR_TEAL        = 0x00FFFF;
const int COLOR_SKY         = 0xDDDDFF;
const int COLOR_INDIGO      = 0x6655BB;
const int COLOR_INDIGO_L    = 0xBBBBFF;
const int COLOR_INDIGO_D    = 0x554499;
const int COLOR_PURPLE      = 0x880088; 
const int COLOR_PURPLE_L    = 0xDD66DD;
const int COLOR_PURPLE_D    = 0x660055;
const int COLOR_MAGENTA     = 0xCC33AA;
const int COLOR_MAGENTA_L   = 0xFF00FF;
const int COLOR_MAGENTA_D   = 0x880066;
const int COLOR_PINK        = 0xFFBBCC;
const int COLOR_TAN         = 0xEEBBAA;
const int COLOR_BROWN       = 0xAA6622;
const int COLOR_BROWN_D     = 0x995500;